use mavenmovies;
-- Question 1:Retrieve the total number of rentals made in the Sakila database.
SELECT 
    COUNT(rental_id)
FROM
    rental;

-- Question 2: Find the average rental duration (in days) of movies rented from the Sakila database.
SELECT 
    *
FROM
    rental;
SELECT 
    AVG(DATEDIFF(return_date, rental_date)) AS average_rental_duration
FROM
    rental;

-- Question 3: Display the first name and last name of customers in uppercase.
SELECT 
    UPPER(first_name) AS Upper_first,
    UPPER(last_name) AS upper_last
FROM
    customer;


-- Question 4: Extract the month from the rental date and display it alongside the rental ID.
SELECT 
    *
FROM
    rental;
SELECT 
    rental_id, MONTHNAME(rental_date) AS month_name
FROM
    rental;


-- Question 5: Retrieve the count of rentals for each customer (display customer ID and the count of rentals).
SELECT 
    customer_id, COUNT(rental_id) AS count_of_rentals
FROM
    rental
GROUP BY customer_id;


-- Question 6: Find the total revenue generated by each store.
SELECT 
    *
FROM
    store;
SELECT 
    s.store_id, SUM(p.amount) AS total_revenue
FROM
    store s
        JOIN
    staff st ON s.store_id = st.store_id
        JOIN
    payment p ON st.staff_id = p.staff_id
GROUP BY store_id;


-- question 7 Display the title of the movie, customer s first name, and last name who rented it.
SELECT 
    title, first_name, last_name
FROM
    customer
        JOIN
    rental ON customer.customer_id = rental.customer_id
        JOIN
    inventory ON inventory.inventory_id = rental.inventory_id
        JOIN
    film ON film.film_id = inventory.film_id;


-- question 8 Retrieve the names of all actors who have appeared in the film "Gone with the Wind."
SELECT 
    CONCAT(first_name, ' ', last_name) AS actors_name, title
FROM
    actor
        JOIN
    film_actor ON actor.actor_id = film_actor.actor_id
        JOIN
    film ON film.film_id = film_actor.film_id
WHERE
    film.title = 'Gone with the Wind';


-- // Group by // -- 
SELECT 
    *
FROM
    category;

-- Question 1 Determine the total number of rentals for each category of movies.
SELECT 
    COUNT(rental_id) AS number_of_rentals, category_id
FROM
    film_category
        JOIN
    film ON film_category.film_id = film.film_id
        JOIN
    inventory ON film.film_id = inventory.film_id
        JOIN
    rental ON inventory.inventory_id = rental.inventory_id
GROUP BY category_id;

-- Question 2 Find the average rental rate of movies in each language.
SELECT 
    AVG(rental_rate), name
FROM
    language
        JOIN
    film ON film.language_id = language.language_id
GROUP BY language.name;

-- Question 3: Retrieve the customer names along with the total amount they've spent on rentals.
SELECT 
    CONCAT(first_name, ' ', last_name) AS full_name,
    SUM(amount) AS total_amt
FROM
    customer
        JOIN
    payment ON payment.customer_id = customer.customer_id
        JOIN
    rental ON rental.rental_id = payment.rental_id
GROUP BY full_name;


-- Question 4:List the titles of movies rented by each customer in a particular city (e.g., 'London').
	SELECT 
    title, CONCAT(first_name, ' ', last_name) AS full_name, city
FROM
    city
        JOIN
    address ON address.city_id = city.city_id
        JOIN
    customer ON address.address_id = customer.address_id
        JOIN
    rental ON rental.customer_id = customer.customer_id
        JOIN
    inventory ON inventory.inventory_id = rental.inventory_id
        JOIN
    film ON film.film_id = inventory.film_id
WHERE
    city = 'London'
ORDER BY full_name , title;
    
    
  --  Question 5: Display the top 5 rented movies along with the number of times they've been rented.
SELECT 
    title, COUNT(rental_id) AS rent_count
FROM
    film
        JOIN
    inventory ON film.film_id = inventory.film_id
        JOIN
    rental ON rental.inventory_id = inventory.inventory_id
GROUP BY title
ORDER BY rent_count
LIMIT 5;
  
  
  --  Question 6: Determine the customers who have rented movies from both stores (store ID 1 and store ID 2).
SELECT 
    c.customer_id, c.first_name, c.last_name
FROM
    customer c
        JOIN
    rental r ON c.customer_id = r.customer_id
        JOIN
    inventory i ON r.inventory_id = i.inventory_id
        JOIN
    store s ON i.store_id = s.store_id
WHERE
    s.store_id IN (1 , 2)
GROUP BY c.customer_id , c.first_name , c.last_name
HAVING COUNT(DISTINCT s.store_id) = 2;
  
